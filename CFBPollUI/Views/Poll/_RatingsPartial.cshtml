@using CFBPollUI.ViewModels.Shared.Grid
@using CFBPollUI.ViewModels.Shared.Grid.Helpers
@using NonFactors.Mvc.Grid;
@using System.Reflection;
@model CFBPollUI.ViewModels.Poll.RatingsViewModel

@{
    Layout = null;
    var request = Context.Request;
    var baseUrl = $"{request.Scheme}://{request.Host}{request.PathBase}";
}

<div id="ratingsGridDiv">
    @(
        Html.Grid(Model.Data).Build(columns =>
        {
            var sortedData = Model.Data.OrderBy(o => o.Rating);
            var firstItem = Model.Data.FirstOrDefault();
            if (firstItem != null && (Model.DynamicColumns != null && Model.DynamicColumns.Any()))
            {
                PropertyInfo[] properties = firstItem.GetType().GetProperties();

                foreach (DynamicColumn dynamicColumn in Model.DynamicColumns.OrderBy(c => c.Position))
                {
                    PropertyInfo? property = properties.FirstOrDefault(p => p.Name.Equals(dynamicColumn.PropertyName, StringComparison.OrdinalIgnoreCase));
                    if (property == null)
                        continue;

                    var columnBuilder = columns.Add(model => property.GetValue(model)).Titled(dynamicColumn.Title);
                    columnBuilder.Name = property.Name;

                    if (dynamicColumn.IsHidden) 
                        columnBuilder.Css("mvc-grid-hidden-column");

                    if (!string.IsNullOrEmpty(dynamicColumn.Format)) 
                        columnBuilder.Formatted(dynamicColumn.Format);

                    if (dynamicColumn.Filterable)
                        columnBuilder.Filterable(true);
                    else
                        columnBuilder.Filterable(false);

                    if (dynamicColumn.Sortable)
                        columnBuilder.Sortable(true);
                    else
                        columnBuilder.Sortable(false);
                }
            }
        })
        .Empty("No data found")
        .Filterable()
        .Sortable()
        .Named("ratings")
    )
</div>